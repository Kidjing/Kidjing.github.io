<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客导航栏链接URL乱码</title>
    <url>/2020/04/17/Hexo%E5%8D%9A%E5%AE%A2%E5%AF%BC%E8%88%AA%E6%A0%8F%E9%93%BE%E6%8E%A5URL%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<p>在网上找了一些教程后开始搭建博客，使用的是hexo-theme-next模板，搭建后发现菜单栏跳转的时候总是出现404错误，通过观察发现跳转菜单页面时，url链接后面总是多一个%20，也就是空格的ASCII编码。反复的修改配置文件的menu选项，无果，后来查找到有一篇博客中给出了解决方案和说明，下面是参考博客链接：<a href="https://blog.csdn.net/fullbug/article/details/103844424?" target="_blank" rel="noopener">https://blog.csdn.net/fullbug/article/details/103844424?</a></p>
<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>URL乱码出现在两个地方，一个是上面的导航栏，一个是右边栏的“日志”菜单部分。</p>
<a id="more"></a>

<h3 id="导航栏链接乱码问题"><a href="#导航栏链接乱码问题" class="headerlink" title="导航栏链接乱码问题"></a>导航栏链接乱码问题</h3><p><img src="https://user-images.githubusercontent.com/49603166/79550063-700ef900-80ca-11ea-8767-cb27ad2ca5c8.png" alt="导航栏乱码"></p>
<h3 id="右边栏的“日志”有乱码"><a href="#右边栏的“日志”有乱码" class="headerlink" title="右边栏的“日志”有乱码"></a>右边栏的“日志”有乱码</h3><p><img src="https://user-images.githubusercontent.com/49603166/79550395-db58cb00-80ca-11ea-9135-524e008ab25d.png" alt="打开日志导航栏乱码"></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="解决导航栏URL乱码"><a href="#解决导航栏URL乱码" class="headerlink" title="解决导航栏URL乱码"></a>解决导航栏URL乱码</h3><p>查看themes\hexo-theme-next\layout_partials 下面的 header.swig 代码和模板的配置文件 \themes\hexo-theme-next_config.yml，发现导航栏链接乱码是因为菜单配置是有空格造成的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;li class=<span class="string">"menu-item menu-item-&#123;&#123; itemName | replace(' ', '-') &#125;&#125;"</span>&gt;</span><br><span class="line">  &lt;a href=<span class="string">"&#123;&#123; url_for(path.split('||')[0]) | trim &#125;&#125;"</span> rel=<span class="string">"section"</span>&gt;</span><br><span class="line">	&#123;% <span class="keyword">if</span> theme.menu_icons.enable %&#125;</span><br><span class="line">	  &lt;i class=<span class="string">"menu-item-icon fa fa-fw fa-&#123;&#123; path.split('||')[1] | trim | default('question-circle') &#125;&#125;"</span>&gt;&lt;/i&gt; &lt;br /&gt;</span><br><span class="line">	&#123;% endif %&#125;</span><br><span class="line">	&#123;&#123; __(<span class="string">'menu.'</span> + name) | replace(<span class="string">'menu.'</span>, <span class="string">''</span>) &#125;&#125;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure>

<p>因为url_for函数会将字符串转码，碰到空格或其他特殊字符会进行转意，就会出现乱码。<br>解决的办法是修改模板的配置文件 \themes\hexo-theme-next_config.yml文件去掉空格就是的。<br>原始配置文件配置如下：</p>
<p><img src="https://user-images.githubusercontent.com/49603166/79550404-deec5200-80ca-11ea-8dd5-4071d99dc275.png" alt="原配置文件"></p>
<p><img src="https://user-images.githubusercontent.com/49603166/79550409-e01d7f00-80ca-11ea-8cbc-776ea05123fc.png" alt="修改后的配置文件"></p>
<h3 id="解决右边栏的“日志”部分URL乱码"><a href="#解决右边栏的“日志”部分URL乱码" class="headerlink" title="解决右边栏的“日志”部分URL乱码"></a>解决右边栏的“日志”部分URL乱码</h3><p>在 themes\hexo-theme-next\layout_macro 找到sidebar.swig 文件 找到如下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> config.archive_dir != <span class="string">'/'</span> and site.posts.length &gt; 0 %&#125;</span><br><span class="line">  &lt;div class=<span class="string">"site-state-item site-state-posts"</span>&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> theme.menu.archives %&#125;</span><br><span class="line">	&lt;a href=<span class="string">"&#123;&#123; url_for(theme.menu.archives).split('||')[0] | trim &#125;&#125;"</span>&gt;</span><br><span class="line">  &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">	&lt;a href=<span class="string">"&#123;&#123; url_for(config.archive_dir) &#125;&#125;"</span>&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">	  &lt;span class=<span class="string">"site-state-item-count"</span>&gt;&#123;&#123; site.posts.length &#125;&#125;&lt;/span&gt;</span><br><span class="line">	  &lt;span class=<span class="string">"site-state-item-name"</span>&gt;&#123;&#123; __(<span class="string">'state.posts'</span>) &#125;&#125;&lt;/span&gt;</span><br><span class="line">	&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>将</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">"&#123;&#123; url_for(theme.menu.archives).split('||')[0] | trim &#125;&#125;"</span>&gt;</span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">"&#123;&#123; url_for(theme.menu.archives.split('||')[0]) | trim &#125;&#125;"</span>&gt;</span><br></pre></td></tr></table></figure>
<p>问题即可得到解决！（折腾了老半天QAQ）</p>
]]></content>
      <categories>
        <category>-小麻烦</category>
      </categories>
      <tags>
        <tag>-Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>节点引用</title>
    <url>/2020/04/17/%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    <content><![CDATA[<blockquote>
<p>如果函数中需要新建结点，即对二叉树的结构做出修改，就需要加引用；如果只是修改当前已有结点的内容，或者仅仅是遍历树，就不用加以引用。</p>
</blockquote>
]]></content>
      <categories>
        <category>-数据结构与算法</category>
      </categories>
      <tags>
        <tag>-二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>大整数运算</title>
    <url>/2020/04/17/%E5%A4%A7%E6%95%B4%E6%95%B0/</url>
    <content><![CDATA[<blockquote>
<p>大整数又称为高精度整数，其含义就是用基本数据类型无法存储其精度的整数。例如，在求阶乘的运算时，其结果超过了长整型的范围，导致输出结果溢出。</p>
</blockquote>
<h2 id="一、大整数的存储"><a href="#一、大整数的存储" class="headerlink" title="一、大整数的存储"></a>一、大整数的存储</h2><blockquote>
<p>利用数组即可，将大整数的高位存储在数组的高位，整数的低位存储在数组的低位。</p>
</blockquote>
]]></content>
      <categories>
        <category>-数据结构与算法</category>
      </categories>
      <tags>
        <tag>-高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>爱奇艺前端实习凉经</title>
    <url>/2020/10/24/%E7%88%B1%E5%A5%87%E8%89%BA%E5%89%8D%E7%AB%AF%E5%AE%9E%E4%B9%A0%E5%87%89%E7%BB%8F/</url>
    <content><![CDATA[<h2 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h2><blockquote>
<p>面试官一般是带你的主管</p>
</blockquote>
<h3 id="面试流程"><a href="#面试流程" class="headerlink" title="面试流程"></a>面试流程</h3><p>自我介绍-&gt;面试官提问-&gt;你还有什么需要问的</p>
<h3 id="面试内容（不分先后顺序）"><a href="#面试内容（不分先后顺序）" class="headerlink" title="面试内容（不分先后顺序）"></a>面试内容（不分先后顺序）</h3><ol>
<li>对虚拟DOM的理解<br><img src="https://user-images.githubusercontent.com/49603166/97064667-315a7e00-15da-11eb-904c-9b92b7d37c87.png" alt="虚拟DOM工作流程"><blockquote>
<p>VDOM的出现是为了解决DOM树的重排重绘的问题的，它在一个虚拟的空间中创建一个类似DOM的结构，只将更新的结果发送给浏览器的DOM树来执行。</p>
</blockquote>
</li>
</ol>
<p><img src="https://user-images.githubusercontent.com/49603166/97064660-2dc6f700-15da-11eb-98bd-9d3d5531f4ab.png" alt="虚拟DOM树的渲染"></p>
<blockquote>
<p>最具价值的核心功能是如何识别并保存新旧节点数据结构之间差异的方法，也即是diff算法。毫无疑问的是diff算法的复杂度与效率是决定VirtualDOM能够带来性能提升效果的关键因素</p>
</blockquote>
<ol start="2">
<li>Bable的工作原理</li>
</ol>
<ul>
<li>解析（parse）：接受源码并输出AST（抽象语法树）：词法分析和语法分析。</li>
<li>转换（transformer）：接受AST并对其进行遍历，并对节点进行增删改查生成新的AST。</li>
<li>生成（generator）：深度优先遍历AST，然后构建可以表示转换后代码的字符串。<br><img src="https://user-images.githubusercontent.com/49603166/97064674-391a2280-15da-11eb-853c-b6422507714a.png" alt="Bable的工作原理"></li>
</ul>
<ol start="3">
<li>与服务器端进行交互的构造函数</li>
<li>点击事件处理函数</li>
<li>前端安全（XSS、CRSF，怎么产生的，如何解决）</li>
<li>跨域（细节）</li>
<li>数组相关知识</li>
</ol>
<ul>
<li>数组的去重</li>
<li>删除数组中的某个元素</li>
</ul>
<ol start="8">
<li>promise知识（涉及到了finally的用法）</li>
<li>call、apply、bind（实现bind）</li>
<li>问了一些关于后端的知识（例如数据库、docker…）</li>
<li>模块之间的如何通信的</li>
<li>知道的打包工具（Webpack），说一下plugin和loader</li>
<li>知道哪些ES6的新特性/用法</li>
<li>判断一个数组的方法（并且问了其中一些方法的缺点）</li>
<li>DOM工作流</li>
<li>ES6基本数据类型</li>
<li>Ajax在生命周期中的哪个环节进行</li>
</ol>
<h2 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h2><blockquote>
<p>一般是部门的主管面试</p>
</blockquote>
<h3 id="面试内容"><a href="#面试内容" class="headerlink" title="面试内容"></a>面试内容</h3><ol>
<li>说说iterator</li>
<li>跨域（详细说一下jsonp和cors）</li>
<li>事件循环</li>
<li>git pull和git fetch的区别</li>
<li>git版本库，版本管理</li>
<li>怎么设置cookie和清除cookie，cookie的缺点</li>
<li>说说call，apply</li>
<li>由于自己还没有接触Vue，所以面试官就没怎么问框架</li>
</ol>
]]></content>
      <categories>
        <category>-前端</category>
      </categories>
      <tags>
        <tag>-实习 -面经</tag>
      </tags>
  </entry>
</search>
